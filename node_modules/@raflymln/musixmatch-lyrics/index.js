const fetch = require('node-fetch');
const cheerio = require('cheerio');
const fs = require('fs')

class Musixmatch {

    header = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36'
    }

    search = async(name) => {

        var data = await fetch(`https://www.musixmatch.com/search/${encodeURI(name)}`, {
                headers: this.header
            }),
            $ = cheerio.load(await data.text()),
            result = $('.media-card-title a').first().attr("href");

        return (result == undefined) ? false : result;

    }

    lyrics = async(url) => {

        var data = await fetch('https://www.musixmatch.com' + url, {
                headers: this.header
            }),
            $ = cheerio.load(await data.text()),
            result = {};

        $('.mxm-track-title__track small').remove();

        result.title = $('.mxm-track-title__track').text();
        result.artists = $('.mxm-track-title h2').text();
        result.lyrics = $('.mxm-lyrics__content').text();
        result.albumImg = `http:${$('.banner-album-image-desktop img').attr("src")}`;
        result.url = 'https://www.musixmatch.com' + url;

        return (result.lyrics == undefined || result.lyrics == '') ? false : result;

    }

    find = async(title) => {
        const searchResult = await this.search(title)
        if (!searchResult) throw 'Cannot Find that Song!';

        const songResult = await this.lyrics(searchResult)
        if (!songResult) throw 'No Lyrics are Found';

        return songResult;
    }

}

module.exports = new Musixmatch